% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/access.R
\name{authorize_fitbit_app}
\alias{authorize_fitbit_app}
\title{Authorize app for Fitbit API use}
\usage{
authorize_fitbit_app(
  directory,
  appname,
  key,
  secret = NULL,
  redirect_uri = httr::oauth_callback()
)
}
\arguments{
\item{directory}{Directory location where the access tokens and data should be stored.}

\item{appname}{name of the application.  This is not used for OAuth, but is
used to make it easier to identify different applications.}

\item{key}{consumer key, also sometimes called the client ID}

\item{secret}{consumer secret, also sometimes called the client secret.
Despite its name, this does not necessarily need to be protected like a
password, i.e. the user still has to authenticate themselves and grant the
app permission to access resources on their behalf. For example, see
Google's docs for \href{https://developers.google.com/identity/protocols/oauth2}{OAuth2 for installed applications}.}

\item{redirect_uri}{The URL that user will be redirected to after
authorisation is complete. You should generally leave this as the default
unless you're using a non-standard auth flow (like with shiny).}
}
\value{
Returns the token retrieved from Fitbit API authorization and saves it
    to a token folder within the directory. It also creates a data folder and
    a SQL database within the directory.
}
\description{
Use your Fitbit key and secret to authorize your app for Fitbit API use
}
\details{
Use your Fitbit key and secret to authorize your app for Fitbit API use
}
\seealso{
\code{\link[httr]{add_headers}}
 \code{\link[httr]{content_type}}
 \code{\link[httr]{oauth_endpoint}}
 \code{\link[httr]{oauth_app}}
 \code{\link[httr]{oauth2.0_token}}
 \code{\link[RCurl]{base64}}
 \code{\link[DBI]{dbConnect}}
 \code{\link[DBI]{dbDisconnect}}
 \code{\link[RSQLite]{SQLite}}
}
